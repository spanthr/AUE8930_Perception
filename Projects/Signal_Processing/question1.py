# -*- coding: utf-8 -*-
"""question1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_rUTsMBZZ2DbFslgNheIAqU4ad0GIlyN
"""

# Commented out IPython magic to ensure Python compatibility.
# %matplotlib inline
import numpy as np
import matplotlib.pyplot as plt
import math
#from __future__ import division
Fs=1000                                                                         # sampling frequency or rate
t0=0
t1=0.1

time=np.arange(t0,t1,1/Fs)
#time=np.linspace(0,0.1,0.0001)                                                         # time vector start,end and size
print(time)
amp2=2
amp3=3
w1=500                                                                           #omega for the function
w2=1000
w3=2000

time_data=2+amp3*np.cos(w1*math.pi*time)+amp2*np.cos(w2*math.pi*time)+amp3*np.sin(w3*math.pi*time)
#noise=0                                                                         # No noise the wave

"""plotting the function"""
plt.plot(time,time_data)
plt.title('SIgnal visualization in Time Domain')
plt.ylabel('Amplitude')
plt.xlabel('Time in seconds')
plt.show()
#print(time_data)





import sympy
#from sympy import fft

freq = np.abs(np.fft.fft(time_data))                                                    # frequecny data for time domain using the fft function
""" Plotting the frequency domain function"""
plt.plot(freq)
plt.title('Frequency domain signal')

plt.xlabel('Frequency in Hz')
plt.ylabel('Amplitude')
plt.show()
